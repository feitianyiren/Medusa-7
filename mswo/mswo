#!/usr/bin/env python

# Medusa simple web-output daemon

from daemon import Daemon
import os
import sys
import time

RENDER_INTERVAL = 30
IN_PATH = "/home/sulami/medusa.out"
OUT_PATH = "/home/sulami/medusa/mswo/web/index.html"
HTML_HEAD = "<html>\n<head>\n<title>Medusa</title>\n<meta http-equiv=\"refresh\" content=\"" + str(RENDER_INTERVAL) + "\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"stylesheet.css\">\n</head>\n<body>\n<h1>Medusa</h1>\n<table>\n"
HTML_MID = "</table><table id=\"counter\">"
HTML_FOOT = "</table>\n</body>\n</html>"

# Writes the upper part of the page, flushes the old page
def write_head():
    try:
        with open(OUT_PATH, mode='w+') as file:
            file.write(HTML_HEAD)
        file.close()
    except:
        sys.exit(1)

# Writes the lower part of the page
def write_foot():
    try:
        with open(OUT_PATH, mode='a') as file:
            file.write(HTML_FOOT)
        file.close()
    except:
        sys.exit(1)

# Writes a line of data into the table, after interpreting it and formatting it into a table row
def write_data(data):
    try:
        form = data.split(" :: ")
        global stat_ok
        global stat_warn
        global stat_crit
        global stat_unkwn
        if 'OK' in form[2]:
            color = "green"
            stat_ok += 1
        elif 'WARNING' in form[2]:
            color = "yellow"
            stat_warn += 1
        elif 'CRITICAL' in form[2]:
            color = "red"
            stat_crit += 1
        elif 'ERROR' in form[2]:
            color = "red"
            stat_crit += 1
        else:
            color = "grey"
            stat_unkwn += 1
        tab_row = "<tr style=\"color: " + color + "\"><td>" + form[0] + "</td><td>" + form[1] + "</td><td>" + form[2] + "</td></tr>\n"
        with open(OUT_PATH, mode='a') as file:
            file.write(tab_row)
    except:
        sys.exit(1)

# Writes the mid section of the page
def write_mid():
    try:
        with open(OUT_PATH, mode='a') as file:
            file.write(HTML_MID + "<tr><td style=\"background-color: green\">" + str(stat_ok) + "</td><td style=\"background-color: yellow\">" + str(stat_warn) + "</td><td style=\"background-color: red\">" + str(stat_crit) + "</td><td style=\"background-color: grey\">" + str(stat_unkwn) + "</td></tr>")
        file.close()
    except:
        sys.exit(1)

# Reads the data sets from medusa.out and calls write_data()
def read_data():
    try:
        with open(IN_PATH, mode='r') as file:
            for data_set in file.readlines():
                write_data(data_set)
        file.close()
    except:
        sys.exit(1)

def render():
    global stat_ok
    global stat_warn
    global stat_crit
    global stat_unkwn
    stat_ok = 0
    stat_warn = 0
    stat_crit = 0
    stat_unkwn = 0
    write_head()
    read_data()
    write_mid()
    write_foot()
    

# Generic Unix daemon code, courtesy of Sander Marechal, http://www.jejik.com/articles/2007/02/a_simple_unix_linux_daemon_in_python/
class MyDaemon(Daemon):
    def run(self):
        while True:
            render()
            time.sleep(RENDER_INTERVAL)

if __name__ == "__main__":
    daemon = MyDaemon('/tmp/medusa-mswo.pid')
    if len(sys.argv) == 2:
        if 'start' == sys.argv[1]:
            daemon.start()
        elif 'stop' == sys.argv[1]:
            daemon.stop()
        elif 'restart' == sys.argv[1]:
            daemon.restart()
        else:
            print "Unknown command"
            sys.exit(2)
        sys.exit(0)
    else:
        print "usage: %s start|stop|restart" % sys.argv[0]
        sys.exit(2)

